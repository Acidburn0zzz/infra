---
# create/update config
- file:
    path: "{{ item }}"
    state: directory
  with_items:
  - /opt/prometheus/config
  - /opt/prometheus/data
  - /opt/grafana/config
  - /opt/grafana/data
- template:
    src: prometheus.yml.j2
    dest: /opt/prometheus/config/prometheus.yml
    mode: 0400
  register: prometheus_yml
- template:
    src: grafana.ini.j2
    dest: /opt/grafana/config/grafana.ini
    mode: 0400
  register: grafana_ini

# assert containers run and are up-to-date
- docker:
    name: prometheus
    image: "prom/prometheus:{{ prometheus_ref }}"
    command: "-config.file=/etc/prometheus/prometheus.yml -storage.local.path=/prometheus -storage.local.memory-chunks=512288 -storage.local.retention=8760h0m0s -web.external-url=/prometheus -web.console.libraries=/etc/prometheus/console_libraries -web.console.templates=/etc/prometheus/consoles"
    state: reloaded
    restart_policy: always
    net: host
    volumes:
    - /opt/prometheus/config:/etc/prometheus
    - /opt/prometheus/data:/prometheus
- docker:
    name: grafana
    image: "luzifer/grafana:{{ grafana_ref }}"
    state: reloaded
    restart_policy: always
    ports:
    - 127.0.0.1:3000:3000
    volumes:
    - /opt/grafana/config:/etc/grafana
    - /opt/grafana/data:/var/lib/grafana

# apply config updates
- docker:
    name: prometheus
    image: "prom/prometheus:{{ prometheus_ref }}"
    state: restarted
  when: "prometheus_yml.changed"
- docker:
    name: grafana
    image: "luzifer/grafana:{{ grafana_ref }}"
    state: restarted
  when: "grafana_ini.changed"

# nginx vhost
- file: path=/opt/nginx/conf.d state=directory
- template:
    src: metrics.conf.j2
    dest: /opt/nginx/conf.d/metrics.conf
  notify: reload nginx

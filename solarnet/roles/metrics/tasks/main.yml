---
# create/update config
- file:
    path: "{{ item }}"
    state: directory
  with_items:
  - /opt/prometheus/config
  - /opt/prometheus/data
- template:
    src: prometheus.yml.j2
    dest: /opt/prometheus/config/prometheus.yml
    mode: 0400
  register: prometheus_yml

# build the docker image, if needed
- shell: "cat /opt/prometheus.ref | grep {{ prometheus_ref }}"
  ignore_errors: true
  register: prometheus_ref_present
- git:
    repo: https://github.com/prometheus/prometheus.git
    dest: /opt/prometheus/src
    version: "{{ prometheus_ref }}"
  when: "prometheus_ref_present.rc != 0"
- copy:
    src: Dockerfile
    dest: /opt/prometheus/Dockerfile
  when: "prometheus_ref_present.rc != 0"
- shell: "docker build -t prometheus:{{ prometheus_ref }} /opt/prometheus"
  when: "prometheus_ref_present.rc != 0"

# assert container runs and is up-to-date
- docker:
    name: prometheus
    image: "prometheus:{{ prometheus_ref }}"
    state: reloaded
    restart_policy: always
    net: host
    volumes:
    - /opt/prometheus/config:/etc/prometheus
    - /opt/prometheus/data:/prometheus

# apply config update
- docker:
    name: prometheus
    image: "prometheus:{{ prometheus_ref }}"
    state: restarted
  when: "prometheus_yml.changed"

# nginx vhost
- file: path=/containers/ipfs_gateway_proxy state=directory
- file: path=/containers/ipfs_gateway_proxy/sites-enabled state=directory
- template:
    src: metrics.conf.j2
    dest: /containers/ipfs_gateway_proxy/sites-enabled/metrics.conf
  register: nginx_metrics_conf
- command: docker exec ipfs_gateway_proxy /etc/init.d/nginx reload
  when: nginx_metrics_conf.changed

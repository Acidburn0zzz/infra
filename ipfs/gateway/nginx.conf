upstream gateway {
    server 127.0.0.1:8080;

$(for h in $(lookup gateway_hosts); do
  if test "host$h" != "host$host"; then
    printf '    server [%s]:8080 backup max_fails=5 fail_timeout=5s; # %s.v.ipfs.team\n' $(host=$h var cjdns_ipv6) $h
  fi
done)
}

# TODO set proper port in Host headers,
#      we're just working around libp2p/go-ws-transport#8 for now.

# Redirect everything to HTTPS
server {
    access_log /var/log/nginx/access.log mtail;

    listen 80 default_server;
    listen [::]:80 default_server;

    include conf.d/gateway/denylist.conf;

    proxy_pass_header Server;
    proxy_read_timeout 1800s;

    location / {
        proxy_set_header Host \$host;
        proxy_set_header X-Ipfs-Gateway-Prefix "";
        proxy_pass http://gateway;
    }
}

server {
    server_name ipfs.io gateway.ipfs.io;
    access_log /var/log/nginx/access.log mtail;

    listen 80;
    listen [::]:80;

    include conf.d/gateway/denylist.conf;

    proxy_pass_header Server;
    proxy_read_timeout 1800s;

    # Don't redirect for deeplinks
    location ~ "^/(ipfs|ipns|api)(/|$)" {
        proxy_set_header Host "";
        proxy_set_header X-Ipfs-Gateway-Prefix "";
        proxy_pass http://gateway;
    }

    location / {
        return 301 https://\$http_host\$request_uri;
    }
}

# The cjdns-facing gateway at h.ipfs.io
server {
    access_log /var/log/nginx/access.log mtail;

    listen [$(var cjdns_ipv6)]:80 default_server;

    include conf.d/gateway/denylist.conf;

    proxy_pass_header Server;
    proxy_read_timeout 1800s;

    location / {
        proxy_set_header Host \$host;
        proxy_set_header X-Ipfs-Gateway-Prefix "";
        proxy_pass http://gateway;
    }
}

server {
    server_name gateway.ipfs.io;
    access_log /var/log/nginx/access.log mtail;

    listen 443 default_server ssl;
    listen [::]:443 default_server ssl;
    ssl_certificate /etc/nginx/certs/ipfs.io.crt;
    ssl_certificate_key /etc/nginx/certs/ipfs.io.key;
    ssl_dhparam /etc/nginx/certs/dhparam.pem;
    ssl_trusted_certificate /etc/nginx/certs/ipfs.io.trustchain.crt;

    # HSTS (ngx_http_headers_module is required)
    # 31536000 seconds = 12 months, as advised by hstspreload.org
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    include conf.d/gateway/denylist.conf;

    proxy_pass_header Server;
    proxy_read_timeout 1800s;

    location / {
        proxy_set_header Host \$host;
        proxy_set_header X-Ipfs-Gateway-Prefix "";
        proxy_pass http://gateway;
    }
}

server {
    server_name ipfs.io;
    access_log /var/log/nginx/access.log mtail;

    listen 443 ssl;
    listen [::]:443 ssl;
    ssl_certificate /etc/nginx/certs/ipfs.io.crt;
    ssl_certificate_key /etc/nginx/certs/ipfs.io.key;
    ssl_dhparam /etc/nginx/certs/dhparam.pem;
    ssl_trusted_certificate /etc/nginx/certs/ipfs.io.trustchain.crt;

    # HSTS (ngx_http_headers_module is required)
    # 31536000 seconds = 12 months, as advised by hstspreload.org
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    include conf.d/gateway/denylist.conf;

    proxy_pass_header Server;
    proxy_read_timeout 1800s;

    # just pass through /ipfs and /ipns
    location ~ "^/(ipfs|ipns|api)(/|$)" {
        proxy_set_header Host "";
        proxy_set_header X-Ipfs-Gateway-Prefix "";
        proxy_pass http://gateway;
    }

    location /blog/ {
        rewrite "^/blog(/.*)$" \$1 break;
        proxy_set_header Host blog.ipfs.io:80;
        proxy_set_header X-Ipfs-Gateway-Prefix /blog;
        proxy_pass http://gateway;
    }

    location /refs/ {
        rewrite "^/refs(/.*)$" \$1 break;
        proxy_set_header Host refs.ipfs.io:80;
        proxy_set_header X-Ipfs-Gateway-Prefix /refs;
        proxy_pass http://gateway;
    }

    location / {
        proxy_set_header Host \$host:80;
        proxy_set_header X-Ipfs-Gateway-Prefix "";
        proxy_pass http://gateway;
    }
}
